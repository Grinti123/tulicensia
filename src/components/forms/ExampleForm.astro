---
import { useFormValidation } from '../../hooks/useFormValidation';

const validationRules = {
  name: [
    { type: 'required' },
    { type: 'minLength', params: [3] },
    { type: 'maxLength', params: [50] },
  ],
  email: [
    { type: 'required' },
    { type: 'email' },
  ],
  phone: [
    { type: 'required' },
    { type: 'phone' },
  ],
  document: [
    { type: 'required' },
    { type: 'document', params: ['dni'] },
  ],
};

const initialData = {
  name: '',
  email: '',
  phone: '',
  document: '',
};

const {
  formData,
  errors,
  touched,
  handleChange,
  handleBlur,
  validateAll,
} = useFormValidation(initialData, validationRules);
---

<form class="space-y-4">
  <div>
    <label for="name" class="block text-sm font-medium text-gray-700">Nombre</label>
    <input
      type="text"
      id="name"
      name="name"
      value={formData.name}
      on:change={(e) => handleChange('name', e.target.value)}
      on:blur={() => handleBlur('name')}
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
      class:border-red-300={touched.name && errors.name}
    />
    {touched.name && errors.name && (
      <p class="mt-1 text-sm text-red-600">{errors.name}</p>
    )}
  </div>

  <div>
    <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
    <input
      type="email"
      id="email"
      name="email"
      value={formData.email}
      on:change={(e) => handleChange('email', e.target.value)}
      on:blur={() => handleBlur('email')}
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
      class:border-red-300={touched.email && errors.email}
    />
    {touched.email && errors.email && (
      <p class="mt-1 text-sm text-red-600">{errors.email}</p>
    )}
  </div>

  <div>
    <label for="phone" class="block text-sm font-medium text-gray-700">Tel√©fono</label>
    <input
      type="tel"
      id="phone"
      name="phone"
      value={formData.phone}
      on:change={(e) => handleChange('phone', e.target.value)}
      on:blur={() => handleBlur('phone')}
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
      class:border-red-300={touched.phone && errors.phone}
    />
    {touched.phone && errors.phone && (
      <p class="mt-1 text-sm text-red-600">{errors.phone}</p>
    )}
  </div>

  <div>
    <label for="document" class="block text-sm font-medium text-gray-700">DNI</label>
    <input
      type="text"
      id="document"
      name="document"
      value={formData.document}
      on:change={(e) => handleChange('document', e.target.value)}
      on:blur={() => handleBlur('document')}
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
      class:border-red-300={touched.document && errors.document}
    />
    {touched.document && errors.document && (
      <p class="mt-1 text-sm text-red-600">{errors.document}</p>
    )}
  </div>

  <button
    type="button"
    on:click={() => {
      if (validateAll()) {
        // Handle form submission
        console.log('Form is valid:', formData);
      }
    }}
    class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
  >
    Enviar
  </button>
</form>
